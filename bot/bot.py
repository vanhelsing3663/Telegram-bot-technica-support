from aiogram import Bot, Dispatcher, types, executor
from aiogram.dispatcher.filters import Text
from import_of_message.message_answer import *
from keyboards import *
from config import TOKEN
from information_about_video.video_array import *
import random

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(TOKEN)  # —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ , connection API
dp = Dispatcher(bot)


async def start_up_bot(_):
    print('–ë–æ—Ç –Ω–∞—á–∞–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é')

async def random_video(message:types.Message):
    random_video = random.choice(video)
    await bot.send_message(chat_id=message.chat.id,
                           text=random_video,
                           reply_markup=ikb
                           )

@dp.message_handler(commands=['start'])
async def bot_launch(message: types.Message):
    '''
       –§—É–Ω–∫—Ü–∏–∏ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º –≤–≤–æ–¥–∏—Ç—å—Å—è /start
    –ø–æ—Å–ª–µ —á–µ–≥–æ –±–æ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ id —é–∑–µ—Ä–∞
    message - —ç—Ç–æ —Å–æ–æ–±–∑–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é '''
    await message.answer(text=
                         f'{HI} {message.from_user.first_name} {HI2}',
                         parse_mode='HTML',
                         reply_markup=key_board
                         )  # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await bot.send_photo(message.from_user.id,
                         photo='https://im.kommersant.ru/gboxtexts/sp_com/logos/005.jpg')
    # —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –µ–µ –≤–º–µ—Å—Ç–µ —Å –ø—Ä–∏–≤–µ—Ç—Å–≤–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.delete()  # –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ /% –ø—Ä–∏ –µ–µ –≤–≤–æ–¥–µ –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É


@dp.message_handler(commands=['help'])
async def desc_command(message: types.Message):
    '''
        –§—É–∫–Ω—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –±–æ—Ç—É –≤–≤–æ–¥–∏—Ç—å—Å—è /help
    :param message:—Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–≤–æ–¥–∏—Ç—å—Å—è
    –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É
    '''
    await message.answer(text=HELP, parse_mode='HTML',
                         reply_markup=key_board_help
                         )
    await message.delete()


@dp.message_handler(commands=['contactinfo'])
async def contact_info(messages: types.Message):
    '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–≤–æ–¥–∏—Ç—å—Å—è /contactinfo
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫.–∏ (—Å–∞–π—Ç—ã, —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏,–∞–¥—Ä–µ—Å –∏ —Ç.–¥) '''
    await messages.answer(text=CONTACT_INFO, parse_mode='HTML', reply_markup=key_board_contact_info)
    await messages.delete()


@dp.message_handler(commands=['location'])
async def location_organization(message: types.Message):
    '''–§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–µ –≤–≤–æ–¥–∏—Ç—å—Å—è /location
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –≥—É–≥–ª –∫–∞—Ä—Ç–∞—Ö –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ –∫–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ –∞–¥—Ä–µ—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    " –°–µ–≤–µ—Ä–Ω–∞—è –∂–µ–ª–µ–∑–Ω–∞—è –¥–æ—Ä–æ–≥–∞ " '''
    await message.answer(text=LOCATE, parse_mode='HTML')
    await bot.send_location(chat_id=message.from_user.id,
                            latitude=57.636032,
                            longitude=39.890337,
                            reply_markup=key_board
                            )
    # –∫–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ 57.636032, 39.890337 –∏–∑ –≥—É–≥–ª –∫–∞—Ä—Ç
    await message.delete()


@dp.message_handler(Text(equals='üöÇ–ù–∞–∑–∞–¥üöÇ'))
async def back_to_menu(message: types.Message):
    await message.answer(text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ —Ä–∞–∑–¥–µ–ª –Ω–∞–∑–∞–¥',
                         reply_markup=key_board_of_menu_support)
    await message.delete()


@dp.message_handler(Text(equals='üöÇ–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤üöÇ'))
async def menu_of_support(message: types.Message):
    await message.answer(text='–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                         reply_markup=key_board_of_menu_support)
    await message.delete()


@dp.message_handler(
    Text(equals='üöÇ–ü–æ–ª–µ–∑–Ω—ã–µ –≤–∏–¥–µ–æ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏üöÇ'))  # –¥–æ–ø–∏—Å–∞—Ç—å –∫–Ω–æ–ø–∫—É —Å–æ —Å—Ç–∞—Ç—å—è–º–∏
async def article_support(message: types.Message):
    await message.answer(text='–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–µ–π',
                         reply_markup=key_board_articles_support)
    await message.delete()


@dp.message_handler(Text(equals='üöÇ–í—ã–≤–µ—Å—Ç–∏ —Å–ª—É—á–∞–π–Ω–æ–µ –≤–∏–¥–µ–æüöÇ'))
async def send_random_article(message: types.Message):
    await random_video(message)

@dp.message_handler(Text(equals='üöÇ–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏üöÇ'))
async def recieve_location_organization(message: types.Message):
    await message.answer(text='–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
                         reply_markup=key_board_geo_position)
    await message.delete()


@dp.message_handler(Text(equals='üöÇ–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüöÇ'))
async def recieve_contact_info_organization(message: types.Message):
    await message.answer(text='–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω—Ç–∞–Ω–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
                         reply_markup=key_board_contact_info)
    await message.delete()


@dp.message_handler(Text(equals='üöÇ–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞üöÇ'))
async def help_information_bot(message: types.Message):
    await message.answer(text='–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –±–æ—Ç—É @RZD_TECHNICAL_BOT',
                         reply_markup=key_board_help)


@dp.message_handler(Text(equals='üöÇ–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—éüöÇ'))
async def help_information_bot(message: types.Message):
    await message.answer(text='–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –±–æ—Ç—É @RZD_TECHNICAL_BOT',
                         reply_markup=key_board)


@dp.callback_query_handler()
async def callback_video_random(callback: types.CallbackQuery):
    if callback.data == 'like':
        await callback.answer('–°–ø–∞—Å–∏–±–æ, –º—ã —Ä–∞–¥—ã ,—á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –Ω–∞—à –º–∞—Ç–µ—Ä–∏–∞–ª!')
    elif callback.data == 'dislike':
        await callback.answer('–°–ø–∞—Å–∏–±–æ, –∑–∞ —á–µ—Å—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç,–±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —ç—Ç–∏–º!')
    else:
        await random_video(message=callback.message)
        await callback.message()

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True, on_startup=start_up_bot)
